## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 86e20a437119e1d29c5630301c905b559678d22685f34c6b9ebb3fc7189919fe9a29a879bf604e0b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 86e20a437119e1d29c5630301c905b559678d22685f34c6b9ebb3fc7189919fe9a29a879bf604e0b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      role:
        name: role
        description: 'Must be one of <code>admin</code> or <code>user</code>.'
        required: true
        example: user
        type: string
        custom: []
      first_name:
        name: first_name
        description: ''
        required: true
        example: dolores
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: itaque
        type: string
        custom: []
      email:
        name: email
        description: 'This field must be a valid email address.'
        required: true
        example: franz.dickinson@example.net
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: 'srt;TTp??i-I<hB=qd4'
        type: string
        custom: []
    cleanBodyParameters:
      role: user
      first_name: dolores
      last_name: itaque
      email: franz.dickinson@example.net
      password: 'srt;TTp??i-I<hB=qd4'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 86e20a437119e1d29c5630301c905b559678d22685f34c6b9ebb3fc7189919fe9a29a879bf604e0b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 86e20a437119e1d29c5630301c905b559678d22685f34c6b9ebb3fc7189919fe9a29a879bf604e0b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/users/{user_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      role:
        name: role
        description: 'Must be one of <code>admin</code> or <code>user</code>.'
        required: false
        example: admin
        type: string
        custom: []
      first_name:
        name: first_name
        description: ''
        required: false
        example: possimus
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: false
        example: molestiae
        type: string
        custom: []
      email:
        name: email
        description: 'This field must be a valid email address.'
        required: false
        example: tad57@example.net
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: false
        example: Jam2WFg;
        type: string
        custom: []
    cleanBodyParameters:
      role: admin
      first_name: possimus
      last_name: molestiae
      email: tad57@example.net
      password: Jam2WFg;
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 86e20a437119e1d29c5630301c905b559678d22685f34c6b9ebb3fc7189919fe9a29a879bf604e0b'
    controller: null
    method: null
    route: null
    custom: []
